department(dNo,dName,officeRoom,homepage)
student(sNo,sName,sex,age,dNo)
course(cNo,cName,cPNo,credit,dNo)
sc(sNo,cNo,score,recordDate)

Query
一、单表
（1）查询所有年龄大于等于20岁的学生学号、姓名；
（2）查询所有姓钱的男生学号、姓名、出生年份；
（3）查询所有学分大于3的课程名称；
（4）查询所有没有被分配到任何学院的学生姓名；
（5）查询所有尚未设置主页的学院名称。

二、聚集
（1）查询各个学院的平均年龄；
（2）查询每个学生选修课程的平均分；
（3）查询各课程的平均分；
（4）查询各学院开设的课程门数；
（5）查询各门课程选修人数。

三、多表
（1）查询“信息学院”所有学生学号与姓名；
（2）查询“软件学院”开设的所有课程号与课程名称；
（3）查询与“陈丽”在同一个系的所有学生学号与姓名；
（4）查询与“张三”同岁的所有学生学号与姓名；
（5）查询与“张三”同岁且不与“张三”在同一个系的学生学号与姓名；
（6）查询学分大于“离散数学”的所有课程名称；
（7）查询选修了课程名为“组合数学”的学生人数；
（8）查询没有选修“离散数学”的学生姓名；
（9）查询与“算法设计与分析”、“移动计算”学分不同的所有课程名称；
（10）查询平均分大于等于90分的所有课程名称；

（11）查询选修了“离散数学”课程的所有学生姓名与成绩；
（12）查询“王兵”所选修的所有课程名称及成绩；
（13）查询所有具有不及格课程的学生姓名、课程名与成绩；
（14）查询选修了“文学院”开设课程的所有学生姓名；
（15）查询“信息学院”所有学生姓名及其所选的“信息学院”开设的课程名称。

四、综合
（1）查询所有学生及其选课信息（包括没有选课的学生）；
（2）查询“形式语言与自动机”先修课的课程名称；

（3）查询“形式语言与自动机”间接先修课课程名称；

（4）查询先修课为编译原理数学的课程名称；
（5）查询间接先修课为离散数学的课程名称；
（6）查询所有没有先修课的课程名称；
（7）查询所有没选修“形式语言与自动机”课程的学生姓名；
（8）查询所有选修了“形式语言与自动机”但没选修其先修课的学生姓名；
（9）查询选修课程总学分大于等于28的学生姓名及其选修课程总学分；

（10）查询选修了3门以上课程且成绩都大于85分的学生学号与姓名；
（11）查询恰好选修了3门课并且都及格的学生姓名；
（12）查询人数多于6的学院名称及其学生人数；

（13）查询平均成绩高于王兵的学生姓名；
（14）查询所有选修了离散数学并且选修了编译原理课程的学生姓名；
（15）查询软件学院离散数学课程平均分；

（16）查询年龄与“软件学院”所有学生年龄都不相同学生姓名及其年龄和学院；


（17）查询各学院选修同一门课人数大于4的学院、课程及选课人数；

（18）查询仅仅选修了“高等数学”一门课程的学生姓名；（学号、姓名及所在学院名称）

（19）查询平均学分积小于70分的学生姓名。



（20）查询选修了“信息学院”开设全部课程的学生姓名。

（21）查询选修了“杨佳伟”同学所选修的全部课程的学生姓名。


五、DDL练习
1、创建2张表，信息如下：
      图书（编号，书名，作者，ISBN，出版社编号，版本，出版日期）。主码为编号，ISBN唯一。出版社编号为外码，参照出版社编号。
      出版社（编号，名称，地址，电话）。主码为编号。
要求：(1)创建表的同时创建约束；
      (2)删除所创建的表;
      (3)重新创建表，在表创建之后增加约束。

2、
(1)分别向两张表中各插入2行数据。
(2)将其中一个出版社地址变更一下。
(3)删除所插入数据。
3、
(1)创建一个软件学院所有选修了“离散数学”课程的学生视图，并通过视图插入一行数据。
(2)创建一个各门课程平均分视图。
4、创建一张学生平均成绩表s_score(sNo,sName,avgscore),并通过子查询插入所有学生数据。

DCL
尝试将多条SQL语句组成一个事务执行，体验提交和回滚操作。





